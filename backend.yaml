- name:
  hosts: backend
  become: yes
  vars:
   login_host: 54.89.192.191
   password_root: ExpenseApp@1
  tasks:
   - name:
     ansible.builtin.command: dnf module disable nodejs -y

   - name: enable nodejs20
     ansible.builtin.command: dnf module enable nodejs:20 -y

   - name: install nodejs
     ansible.builtin.package:
      name: "{{ item }}"
      state: present
     loop: 
      - nodejs
      - mysql  

   - name: create expence user 
     ansible.builtin.user:    #ansible taken care irrespective of distribution user creation by using ansible module
      name: expence
   - name: creating the directory
     ansible.builtin.file:   #file mmodule it will take care for file creation
      path: /app
      state: directory #we can mention direrctory only the it will create
   - name: download the backend code
     ansible.builtin.get_url:   #it will get the code from url using this module like awk curl
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  #  - name: download the code
  #    ansible.builtin.get_url:
  #     url:  https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
  #     dest: /temp/backend.zip
  #     ignore_errors: false
   - name: 
     ansible.builtin.unarchive: #using this module we can extract the file
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes   #Unarchive a file is  on the remote machine so we this command
   - name: install dependencies
     ansible.builtin.command: npm install  # own command create using the command maodule their no ansible module 
     args:
      chdir: /app  #we should run this on where packgage,json file so this args chnage the dir and run that command
   - name: copy the backnedcode
     ansible.builtin.copy:  #using this module we can copy the file
      src: backend.service
      dest: /etc/systemd/system/backend.service
   - name: ansible to install pymysql
     ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9
   - name: import mysql
     community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      name: all
      state: import
   - name: daemon reload
     ansible.builtin.systemd_service:
      daemon_reload: true
      state: restarted
      name: backend
